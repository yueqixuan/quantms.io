# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: ["main", "dev"]
  pull_request:
    branches: ["main"]
  schedule:
    # Run full test suite daily at 2 AM UTC
    - cron: "0 2 * * *"
  workflow_dispatch:
    # Allow manual triggering

permissions:
  contents: read

jobs:
  PythonBlack:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Check code lints with Black
        uses: psf/black@stable
        with:
          options: ". --check"

  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install flake8 pytest pytest-timeout
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install poetry
          # Install package in development mode
          poetry install
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 130 chars wide
          flake8 . --count --exit-zero --max-complexity=30 --max-line-length=130 --statistics --ignore F401,W503,W504
      - name: Test with pytest (Unit Tests Only)
        run: |
          # Run all tests except integration tests
          poetry run pytest -vv -m "not integration"
